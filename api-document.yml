swagger: '2.0'
info:
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.'
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - https
  - http
paths:
  /challengethemes:
    post:
      summary: Add a new challenge theme
      description: チャレンジネタ新規作成
      operationId: ''
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: JWT Token
        - in: formData
          type: file
          name: content
          description: image or video
          required: true
        - in: formData
          type: string
          name: theme_data
          description: JSON
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/challenge-theme'
          examples: {}
        '400':
          description: Bad Request
          schema: {}
        '403':
          description: Forbidden
          schema: {}
    parameters: []
    get:
      summary: ''
      operationId: get-challengethemes
      responses:
        '200':
          description: チャレンジネタのリスト
          schema:
            type: array
            items:
              $ref: '#/definitions/challenge-theme'
        '400':
          description: Bad Request
          schema: {}
      description: ''
      parameters:
        - type: boolean
          in: query
          name: recordable
  /users/login:
    parameters: []
    post:
      summary: ''
      operationId: post-users-login
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user'
          headers:
            Authorization:
              type: string
              description: ''
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema: {}
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              it_token:
                type: string
            required:
              - it_token
  /users/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
    parameters: []
  '/challengethemes/{challenge_theme_id}':
    parameters:
      - type: string
        name: challenge_theme_id
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/challenge-theme'
        '404':
          description: Not Found
          schema: {}
      operationId: get-challengetheme-challenge_theme_id
  /challengerecords:
    parameters: []
    get:
      summary: ''
      operationId: get-challengerecords
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/challenge-record'
        '400':
          description: Bad Request
          schema: {}
      parameters:
        - type: boolean
          in: query
          name: recordable
      description: created_atが新しい順でチャレンジレコードのリストを取得
    post:
      summary: ''
      operationId: post-challengerecords
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/challenge-record'
        '400':
          description: Bad Request
          schema: {}
        '403':
          description: Forbidden
          schema: {}
      parameters:
        - in: formData
          type: file
          name: content
          description: image or movie
          required: true
        - in: formData
          type: string
          name: record_data
          description: JSON
          required: true
  '/challengethemes/{challenge_theme_id}/challengerecords':
    parameters:
      - type: string
        name: challenge_theme_id
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/challenge-record'
        '400':
          description: Bad Request
          schema: {}
        '404':
          description: Not Found
          schema: {}
      operationId: get-challengetheme-challenge_theme_id-challengerecord
      parameters:
        - type: string
          in: query
          name: sort
  '/users/{user_id}/challengethemes':
    parameters:
      - type: string
        name: user_id
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: チャレンジネタのリスト
          schema:
            type: array
            items:
              $ref: '#/definitions/challenge-theme'
        '400':
          description: Bad Request
          schema: {}
        '404':
          description: Not Found
          schema: {}
      operationId: get-users-user_id-challengethemes
      parameters:
        - type: boolean
          in: query
          name: recordable
      description: ''
  '/users/{user_id}/challengerecords':
    parameters:
      - type: string
        name: user_id
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/challenge-record'
        '400':
          description: Bad Request
          schema: {}
        '404':
          description: Not Found
          schema: {}
      operationId: get-users-user_id-challengerecords
      parameters:
        - type: boolean
          in: query
          name: recordable
  /users:
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user'
          headers:
            Authorization:
              type: string
              description: ''
        '400':
          description: Bad Request
          schema: {}
        '401':
          description: Unauthorized
          schema: {}
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              id_token:
                type: string
                description: Firebase認証で取得したidToken
              name:
                type: string
            required:
              - id_token
              - name
  '/users/{user_id}':
    parameters:
      - type: string
        name: user_id
        in: path
        required: true
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user'
        '404':
          description: Not Found
          schema: {}
      operationId: get-users-user_id
securityDefinitions: {}
definitions:
  challenge-theme:
    title: challenge-theme
    type: object
    description: ''
    properties:
      id:
        type: integer
      title:
        type: string
      description:
        type: string
      user:
        $ref: '#/definitions/user'
      recordable:
        type: boolean
      is_int:
        type:
          - boolean
          - 'null'
      unit:
        type:
          - string
          - 'null'
      ranking_type:
        type:
          - string
          - 'null'
        enum:
          - ASC
          - DESC
          - FAV
      created_at:
        type: string
        format: date-time
    required:
      - id
      - title
      - description
      - user
      - recordable
      - is_int
      - unit
      - ranking_type
      - created_at
  user:
    title: user
    type: object
    description: ''
    properties:
      id:
        type: integer
      name:
        type: string
    required:
      - id
      - name
  challenge-record:
    title: challenge-record
    type: object
    description: ''
    properties:
      id:
        type: integer
      content:
        type: string
        format: uri
      comment:
        type: string
      challenge_theme:
        $ref: '#/definitions/challenge-theme'
      user:
        $ref: '#/definitions/user'
      record:
        type: number
      created_at:
        type: string
        format: date-time
    required:
      - id
      - content
      - comment
      - challenge_theme
      - user
      - record
      - created_at
  tag:
    title: tag
    type: object
    properties:
      id:
        type: integer
      text:
        type: string
    required:
      - id
      - text
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
